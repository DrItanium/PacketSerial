<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="class">
    <name>COBS</name>
    <filename>class_c_o_b_s.html</filename>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>encode</name>
      <anchorfile>class_c_o_b_s.html</anchorfile>
      <anchor>aa6aab45e33a3a6b403d8155bb8bbb77b</anchor>
      <arglist>(const uint8_t *buffer, size_t size, uint8_t *encodedBuffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>decode</name>
      <anchorfile>class_c_o_b_s.html</anchorfile>
      <anchor>a76eb04d510a123390895140db5db7237</anchor>
      <arglist>(const uint8_t *encodedBuffer, size_t size, uint8_t *decodedBuffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getEncodedBufferSize</name>
      <anchorfile>class_c_o_b_s.html</anchorfile>
      <anchor>ae3c842b2b9b1138c75410e34275a69f2</anchor>
      <arglist>(size_t unencodedBufferSize)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PacketSerial_</name>
    <filename>class_packet_serial__.html</filename>
    <templarg></templarg>
    <templarg>PacketMarker</templarg>
    <templarg>ReceiveBufferSize</templarg>
    <member kind="typedef">
      <type>void(*</type>
      <name>PacketHandlerFunction</name>
      <anchorfile>class_packet_serial__.html</anchorfile>
      <anchor>ac785ebf3c4a6db69410a9f5c0c9e2f93</anchor>
      <arglist>)(const uint8_t *buffer, size_t size)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PacketHandlerFunctionWithSender</name>
      <anchorfile>class_packet_serial__.html</anchorfile>
      <anchor>ad5ecd69bb92489c37b10aade1910bfce</anchor>
      <arglist>)(const void *sender, const uint8_t *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PacketSerial_</name>
      <anchorfile>class_packet_serial__.html</anchorfile>
      <anchor>a6ceae595e084513c69a04e65ceeda465</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PacketSerial_</name>
      <anchorfile>class_packet_serial__.html</anchorfile>
      <anchor>a0895f7e9c6afb25e540cdee47ff3b442</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>class_packet_serial__.html</anchorfile>
      <anchor>adc487966aa9ba70927543acb76186f02</anchor>
      <arglist>(unsigned long speed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>class_packet_serial__.html</anchorfile>
      <anchor>ac7134ee41cd2d0d62baa210d308fd9f2</anchor>
      <arglist>(unsigned long speed, size_t port) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>class_packet_serial__.html</anchorfile>
      <anchor>a3e86627000aa86b08cc28efa63f29c03</anchor>
      <arglist>(Stream *stream) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStream</name>
      <anchorfile>class_packet_serial__.html</anchorfile>
      <anchor>aae3f10852c7d878d2f48bdf5d44bbaab</anchor>
      <arglist>(Stream *stream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>class_packet_serial__.html</anchorfile>
      <anchor>a4085f92c326368720a5e9b28a2933106</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>class_packet_serial__.html</anchorfile>
      <anchor>a74b43e5a07e8ef713b0257ee3e249184</anchor>
      <arglist>(const uint8_t *buffer, size_t size) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPacketHandler</name>
      <anchorfile>class_packet_serial__.html</anchorfile>
      <anchor>a3a6ebc9f594a7eb79414af0dd77a34e9</anchor>
      <arglist>(PacketHandlerFunction onPacketFunction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPacketHandler</name>
      <anchorfile>class_packet_serial__.html</anchorfile>
      <anchor>aa991deb15a468ad9a5a8e315d7c03504</anchor>
      <arglist>(PacketHandlerFunctionWithSender onPacketFunctionWithSender)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>overflow</name>
      <anchorfile>class_packet_serial__.html</anchorfile>
      <anchor>a2c76159bdebb3af109c4a23274e03e7c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SLIP</name>
    <filename>class_s_l_i_p.html</filename>
    <member kind="enumvalue">
      <name>END</name>
      <anchorfile>class_s_l_i_p.html</anchorfile>
      <anchor>a0386e13bf2fdcb22218eec39bf3912dea0411167978ae5e01fd43e859dae7b923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ESC</name>
      <anchorfile>class_s_l_i_p.html</anchorfile>
      <anchor>a0386e13bf2fdcb22218eec39bf3912deaf902c66b69124997ff711a4caa0781b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ESC_END</name>
      <anchorfile>class_s_l_i_p.html</anchorfile>
      <anchor>a0386e13bf2fdcb22218eec39bf3912dea5efb9022dff4533f42853bfa7c100b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ESC_ESC</name>
      <anchorfile>class_s_l_i_p.html</anchorfile>
      <anchor>a0386e13bf2fdcb22218eec39bf3912deaae402ed8b78f931d098f2f5ee6857a18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END</name>
      <anchorfile>class_s_l_i_p.html</anchorfile>
      <anchor>a0386e13bf2fdcb22218eec39bf3912dea0411167978ae5e01fd43e859dae7b923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ESC</name>
      <anchorfile>class_s_l_i_p.html</anchorfile>
      <anchor>a0386e13bf2fdcb22218eec39bf3912deaf902c66b69124997ff711a4caa0781b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ESC_END</name>
      <anchorfile>class_s_l_i_p.html</anchorfile>
      <anchor>a0386e13bf2fdcb22218eec39bf3912dea5efb9022dff4533f42853bfa7c100b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ESC_ESC</name>
      <anchorfile>class_s_l_i_p.html</anchorfile>
      <anchor>a0386e13bf2fdcb22218eec39bf3912deaae402ed8b78f931d098f2f5ee6857a18</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>encode</name>
      <anchorfile>class_s_l_i_p.html</anchorfile>
      <anchor>a62a29c57c6ecc96a3058681c94bc275a</anchor>
      <arglist>(const uint8_t *buffer, size_t size, uint8_t *encodedBuffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>decode</name>
      <anchorfile>class_s_l_i_p.html</anchorfile>
      <anchor>a156c3dc53015af957b33ecc7b5f0bbe1</anchor>
      <arglist>(const uint8_t *encodedBuffer, size_t size, uint8_t *decodedBuffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getEncodedBufferSize</name>
      <anchorfile>class_s_l_i_p.html</anchorfile>
      <anchor>a681854529b119041c0fac019ba6c082e</anchor>
      <arglist>(size_t unencodedBufferSize)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>md_CHANGELOG</name>
    <title>Changelog</title>
    <filename>md__c_h_a_n_g_e_l_o_g</filename>
  </compound>
  <compound kind="page">
    <name>md_CODE_OF_CONDUCT</name>
    <title>Contributor Covenant Code of Conduct</title>
    <filename>md__c_o_d_e__o_f__c_o_n_d_u_c_t</filename>
  </compound>
  <compound kind="page">
    <name>md_CONTRIBUTING</name>
    <title>Contributing</title>
    <filename>md__c_o_n_t_r_i_b_u_t_i_n_g</filename>
  </compound>
  <compound kind="page">
    <name>md_GETTING_STARTED</name>
    <title>Getting Started</title>
    <filename>md__g_e_t_t_i_n_g__s_t_a_r_t_e_d</filename>
  </compound>
  <compound kind="page">
    <name>md_SUPPORT</name>
    <title>Support</title>
    <filename>md__s_u_p_p_o_r_t</filename>
  </compound>
  <compound kind="page">
    <name>md_TODO</name>
    <title>TODO</title>
    <filename>md__t_o_d_o</filename>
  </compound>
  <compound kind="page">
    <name>md_TROUBLESHOOTING</name>
    <title>Troubleshooting</title>
    <filename>md__t_r_o_u_b_l_e_s_h_o_o_t_i_n_g</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Documentation</title>
    <filename>index</filename>
  </compound>
</tagfile>
